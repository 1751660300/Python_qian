# -*- coding:utf-8 -*-
"""
1.死锁
    概念：一直等待对方释放锁
    原因：有一个线程一直占用资源不释放锁导致的
    结果：程序无法停止
    解决死锁：在合适的地方将锁释放,并不是所有的死锁都开以解决的
2.进程和多进程
    进程：运行一个软件或程序，是系统资源分配的最小单位，线程必须存活在进程中
    多进程可以实现多任务处理：一个进程有一个主线程，多个就有多个
3.创建多进程
    a.导入模块 import multiprocessing
    b.创建进程 multiprocessing.Process(target=, args=, name=, group=)
        返回一个对象
    c.开始进程 进程对象.start()

    对进程的操作
        多进程 ： 查看当前正在运行的进程  multiprocessing.current_process()
        对于操作系统来说需要研究进程号
            multiprocessing.current_process().pid()查看进程id
        扩展：操作系统本身就是程序（进程）
        winPID:10000  所有进程的父进程就是操作系统
        linuxPID:1

        需要借助操作系统模块 os<最初是为linux系统设计的>是内置模块
        os.system('command操作命令')达到和os在linux使用一样的效果

4.进程分类：普通进程 孤儿进程 僵尸进程
    孤儿进程：表示父进程死亡，子进程仍然在运行，如果父进程死亡，资源由操作系统来回收
    僵尸进程：表示进程死亡是由于系统调度原因，父进程没有即时回收子进程的资源，到时操作系统中死亡的子进程
        仍然占用资源 处理：关机重起
"""